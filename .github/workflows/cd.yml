name: Continuous Delivery [CD]

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install -DskipTests -P dev

  package:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: packing application
        run: mvn -B package --file pom.xml -DskipTests -P dev

  hadolint:
    needs: [ package ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: "Hadolint Dockerfile"
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          wget https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          wget https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64.sha256
          sha256sum -c hadolint-Linux-x86_64.sha256
          chmod +x ./hadolint-Linux-x86_64
          mv hadolint-Linux-x86_64 hadolint
          hadolint --help
          hadolint Dockerfile

  registry:
    needs: [ hadolint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Docker Registry Application
        run: mvn -B package --file pom.xml -DskipTests -P dev

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/poi .

      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/poi

      - name: Create Pull Request
        run: gh pr create -B master -H dev --title 'Pull Request/Merge Branch dev into master' --body 'Pull Request realizado para merge com a branch master'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET_KEY }}